{"version":3,"file":"xterm.js","mappings":"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AQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,M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","sources":["webpack://xterm/webpack/universalModuleDefinition","webpack://xterm/./src/browser/AccessibilityManager.ts","webpack://xterm/./src/browser/Clipboard.ts","webpack://xterm/./src/browser/ColorContrastCache.ts","webpack://xterm/./src/browser/Lifecycle.ts","webpack://xterm/./src/browser/Linkifier2.ts","webpack://xterm/./src/browser/LocalizableStrings.ts","webpack://xterm/./src/browser/OscLinkProvider.ts","webpack://xterm/./src/browser/RenderDebouncer.ts","webpack://xterm/./src/browser/Terminal.ts","webpack://xterm/./src/browser/TimeBasedDebouncer.ts","webpack://xterm/./src/browser/Viewport.ts","webpack://xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://xterm/./src/browser/input/CompositionHelper.ts","webpack://xterm/./src/browser/input/Mouse.ts","webpack://xterm/./src/browser/input/MoveToCell.ts","webpack://xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xterm/./src/browser/renderer/dom/WidthCache.ts","webpack://xterm/./src/browser/renderer/shared/Constants.ts","webpack://xterm/./src/browser/renderer/shared/RendererUtils.ts","webpack://xterm/./src/browser/selection/SelectionModel.ts","webpack://xterm/./src/browser/services/CharSizeService.ts","webpack://xterm/./src/browser/services/CharacterJoinerService.ts","webpack://xterm/./src/browser/services/CoreBrowserService.ts","webpack://xterm/./src/browser/services/MouseService.ts","webpack://xterm/./src/browser/services/RenderService.ts","webpack://xterm/./src/browser/services/SelectionService.ts","webpack://xterm/./src/browser/services/Services.ts","webpack://xterm/./src/browser/services/ThemeService.ts","webpack://xterm/./src/common/CircularList.ts","webpack://xterm/./src/common/Clone.ts","webpack://xterm/./src/common/Color.ts","webpack://xterm/./src/common/CoreTerminal.ts","webpack://xterm/./src/common/EventEmitter.ts","webpack://xterm/./src/common/InputHandler.ts","webpack://xterm/./src/common/Lifecycle.ts","webpack://xterm/./src/common/MultiKeyMap.ts","webpack://xterm/./src/common/Platform.ts","webpack://xterm/./src/common/SortedList.ts","webpack://xterm/./src/common/TaskQueue.ts","webpack://xterm/./src/common/WindowsMode.ts","webpack://xterm/./src/common/buffer/AttributeData.ts","webpack://xterm/./src/common/buffer/Buffer.ts","webpack://xterm/./src/common/buffer/BufferLine.ts","webpack://xterm/./src/common/buffer/BufferRange.ts","webpack://xterm/./src/common/buffer/BufferReflow.ts","webpack://xterm/./src/common/buffer/BufferSet.ts","webpack://xterm/./src/common/buffer/CellData.ts","webpack://xterm/./src/common/buffer/Constants.ts","webpack://xterm/./src/common/buffer/Marker.ts","webpack://xterm/./src/common/data/Charsets.ts","webpack://xterm/./src/common/data/EscapeSequences.ts","webpack://xterm/./src/common/input/Keyboard.ts","webpack://xterm/./src/common/input/TextDecoder.ts","webpack://xterm/./src/common/input/UnicodeV6.ts","webpack://xterm/./src/common/input/WriteBuffer.ts","webpack://xterm/./src/common/input/XParseColor.ts","webpack://xterm/./src/common/parser/Constants.ts","webpack://xterm/./src/common/parser/DcsParser.ts","webpack://xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://xterm/./src/common/parser/OscParser.ts","webpack://xterm/./src/common/parser/Params.ts","webpack://xterm/./src/common/public/AddonManager.ts","webpack://xterm/./src/common/public/BufferApiView.ts","webpack://xterm/./src/common/public/BufferLineApiView.ts","webpack://xterm/./src/common/public/BufferNamespaceApi.ts","webpack://xterm/./src/common/public/ParserApi.ts","webpack://xterm/./src/common/public/UnicodeApi.ts","webpack://xterm/./src/common/services/BufferService.ts","webpack://xterm/./src/common/services/CharsetService.ts","webpack://xterm/./src/common/services/CoreMouseService.ts","webpack://xterm/./src/common/services/CoreService.ts","webpack://xterm/./src/common/services/DecorationService.ts","webpack://xterm/./src/common/services/InstantiationService.ts","webpack://xterm/./src/common/services/LogService.ts","webpack://xterm/./src/common/services/OptionsService.ts","webpack://xterm/./src/common/services/OscLinkService.ts","webpack://xterm/./src/common/services/ServiceRegistry.ts","webpack://xterm/./src/common/services/Services.ts","webpack://xterm/./src/common/services/UnicodeService.ts","webpack://xterm/webpack/bootstrap","webpack://xterm/./src/browser/public/Terminal.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IInstantiationService } from 'common/services/Services';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = this._coreBrowserService.mainDocument.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n    this.register(this._coreBrowserService.onDprChange(() => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkProvider, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { color, rgba } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from 'xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    // If the terminal is already opened\n    if (this.element?.ownerDocument.defaultView && this._coreBrowserService) {\n      // Adjust the window if needed\n      if (this.element.ownerDocument.defaultView !== this._coreBrowserService.window) {\n        this._coreBrowserService.window = this.element.ownerDocument.defaultView;\n      }\n      return;\n    }\n\n    this._document = parent.ownerDocument;\n    if (this.options.documentOverride && this.options.documentOverride instanceof Document) {\n      this._document = this.optionsService.rawOptions.documentOverride as Document;\n    }\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = this._document.createDocumentFragment();\n    this._viewportElement = this._document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = this._document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = this._document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = this._document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = this._document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this.register(this._instantiationService.createInstance(CoreBrowserService,\n      this.textarea,\n      parent.ownerDocument.defaultView ?? window,\n      // Force unsafe null in node.js environment for tests\n      this._document ?? (typeof window !== 'undefined') ? window.document : null as any\n    ));\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = this._document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this._document!, this.element!, this.screenElement!, this._viewportElement!, this._helperContainer!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderDimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderDimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderDimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = this._coreBrowserService.mainDocument.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowserService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowserService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowserService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowserService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _helperContainer: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = this._document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = this._document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(this._document, this._helperContainer);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css} !important;` +\n      ` color: ${colors.cursorAccent.css} !important;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = this._document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n    this.renderRows(0, this._bufferService.rows - 1);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = this._document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = this._document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          if (cell.isInvisible()) {\n            text += WHITESPACE_CELL_CHAR;\n          } else {\n            text += chars;\n          }\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell && this._coreService.isCursorInitialized) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, fgOverride)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document, _helperContainer: HTMLElement) {\n    this._container = _document.createElement('div');\n    this._container.classList.add('xterm-width-cache-measure-container');\n    this._container.setAttribute('aria-hidden', 'true');\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n    regular.classList.add('xterm-char-measure-element');\n\n    const bold = _document.createElement('span');\n    bold.classList.add('xterm-char-measure-element');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.classList.add('xterm-char-measure-element');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.classList.add('xterm-char-measure-element');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _helperContainer.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService } from './Services';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class CoreBrowserService extends Disposable implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n  private _screenDprMonitor = new ScreenDprMonitor(this._window);\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n  private readonly _onWindowChange = this.register(new EventEmitter<Window & typeof globalThis>());\n  public readonly onWindowChange = this._onWindowChange.event;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    private _window: Window & typeof globalThis,\n    public readonly mainDocument: Document\n  ) {\n    super();\n\n    // Monitor device pixel ratio\n    this.register(this.onWindowChange(w => this._screenDprMonitor.setWindow(w)));\n    this.register(forwardEvent(this._screenDprMonitor.onDprChange, this._onDprChange));\n\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get window(): Window & typeof globalThis {\n    return this._window;\n  }\n\n  public set window(value: Window & typeof globalThis) {\n    if (this._window !== value) {\n      this._window = value;\n      this._onWindowChange.fire(this._window);\n    }\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nclass ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n  private _windowResizeListener = this.register(new MutableDisposable());\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n\n  constructor(private _parentWindow: Window) {\n    super();\n\n    // Initialize listener and dpr value\n    this._outerListener = () => this._setDprAndFireIfDiffers();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._updateDpr();\n\n    // Monitor active window resize\n    this._setWindowResizeListener();\n\n    // Setup additional disposables\n    this.register(toDisposable(() => this.clearListener()));\n  }\n\n\n  public setWindow(parentWindow: Window): void {\n    this._parentWindow = parentWindow;\n    this._setWindowResizeListener();\n    this._setDprAndFireIfDiffers();\n  }\n\n  private _setWindowResizeListener(): void {\n    this._windowResizeListener.value = addDisposableDomListener(this._parentWindow, 'resize', () => this._setDprAndFireIfDiffers());\n  }\n\n  private _setDprAndFireIfDiffers(): void {\n    if (this._parentWindow.devicePixelRatio !== this._currentDevicePixelRatio) {\n      this._onDprChange.fire(this._parentWindow.devicePixelRatio);\n    }\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this.register(coreBrowserService.onDprChange(() => this.handleDevicePixelRatioChange()));\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    // If the value was not set, the terminal is being disposed so ignore it\n    if (this._renderer.value) {\n      this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n      // Force a refresh\n      this._needsSelectionRefresh = true;\n      this._fullRefresh();\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value!.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        if (this._model.selectionEnd[0] < this._bufferService.cols) {\n          this._model.selectionEnd[0]++;\n        }\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n\n  readonly onDprChange: IEvent<number>;\n  readonly onWindowChange: IEvent<Window & typeof globalThis>;\n\n  /**\n   * Gets or sets the parent window that the terminal is rendered into. DOM and rendering APIs (e.g.\n   * requestAnimationFrame) should be invoked in the context of this window. This should be set when\n   * the window hosting the xterm.js instance changes.\n   */\n  window: Window & typeof globalThis;\n  /**\n   * The document of the primary window to be used to create elements when working with multiple\n   * windows. This is defined by the documentOverride setting.\n   */\n  readonly mainDocument: Document;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    // This is guaranteed to run in the first window, so document should be correct\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n\nexport function runAndSubscribe<T>(event: IEvent<T>, handler: (e: T | undefined) => any): IDisposable {\n  handler(undefined);\n  return event(e => handler(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing, fire only for rows within the\n    // _viewport_ which is relative to ydisp, not relative to ybase.\n    const viewportEnd = this._dirtyRowTracker.end + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    const viewportStart = this._dirtyRowTracker.start + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    if (viewportStart < this._bufferService.rows) {\n      this._onRequestRefreshRows.fire(Math.min(viewportStart, this._bufferService.rows - 1), Math.min(viewportEnd, this._bufferService.rows - 1));\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    let precedingJoinState = this._parser.precedingJoinState;\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      const currentInfo = this._unicodeService.charProperties(code, precedingJoinState);\n      chWidth = UnicodeService.extractWidth(currentInfo);\n      const shouldJoin = UnicodeService.extractShouldJoin(currentInfo);\n      const oldWidth = shouldJoin ? UnicodeService.extractWidth(precedingJoinState) : 0;\n      precedingJoinState = currentInfo;\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - oldWidth > cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          const oldRow = bufferRow;\n          let oldCol = this._activeBuffer.x - oldWidth;\n          this._activeBuffer.x = oldWidth;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n          if (oldWidth > 0 && bufferRow instanceof BufferLine) {\n            // Combining character widens 1 column to 2.\n            // Move old character to next line.\n            bufferRow.copyCellsFrom(oldRow as BufferLine,\n              oldCol, 0, oldWidth, false);\n          }\n          // clear left over cells to the right\n          while (oldCol < cols) {\n            oldRow.setCellFromCodePoint(oldCol++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (shouldJoin && this._activeBuffer.x) {\n        const offset = bufferRow.getWidth(this._activeBuffer.x - 1) ? 1 : 2;\n        // if empty cell after fullwidth, need to go 2 cells back\n        // it is save to step 2 cells back here\n        // since an empty cell is only set by fullwidth chars\n        bufferRow.addCodepointToCell(this._activeBuffer.x - offset,\n          code, chWidth);\n        for (let delta = chWidth - oldWidth; --delta >= 0; ) {\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n        continue;\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth - oldWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n\n    this._parser.precedingJoinState = precedingJoinState;\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * We extend xterm's behavior to allow repeating entire grapheme clusters.\n   * This isn't 100% xterm-compatible, but it seems saner and more useful.\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    const joinState = this._parser.precedingJoinState;\n    if (!joinState) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const chWidth = UnicodeService.extractWidth(joinState);\n    const x = this._activeBuffer.x - chWidth;\n    const bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n    const text = bufferRow.getString(x);\n    const data = new Uint32Array(text.length * length);\n    let idata = 0;\n    for (let itext = 0; itext < text.length; ) {\n      const ch = text.codePointAt(itext) || 0;\n      data[idata++] = ch;\n      itext += ch > 0xffff ? 2 : 1;\n    }\n    let tlength = idata;\n    for (let i = 1; i < length; ++i) {\n      data.copyWithin(tlength, 0, idata);\n      tlength += idata;\n    }\n    this.print(data, 0, tlength);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number, width: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n    }\n    if (width) {\n      content &= ~Content.WIDTH_MASK;\n      content |= width << Content.WIDTH_SHIFT;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): UnicodeCharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as UnicodeCharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    let width = this.wcwidth(codepoint);\n    let shouldJoin = width === 0 && preceding !== 0;\n    if (shouldJoin) {\n      const oldWidth = UnicodeService.extractWidth(preceding);\n      if (oldWidth === 0) {\n        shouldJoin = false;\n      } else if (oldWidth > width) {\n        width = oldWidth;\n      }\n    }\n    return UnicodeService.createPropertyValue(0, width, shouldJoin);\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingJoinState: number; // UnicodeJoinProperties\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingJoinState = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  documentOverride: null,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  documentOverride?: any | null;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\n/*\n * Width and Grapheme_Cluster_Break properties of a character as a bit mask.\n *\n * bit 0: shouldJoin - should combine with preceding character.\n * bit 1..2: wcwidth - see UnicodeCharWidth.\n * bit 3..31: class of character (currently only 4 bits are used).\n *   This is used to determined grapheme clustering - i.e. which codepoints\n *   are to be combined into a single compound character.\n *\n * Use the UnicodeService static function createPropertyValue to create a\n * UnicodeCharProperties; use extractShouldJoin, extractWidth, and\n * extractCharKind to extract the components.\n */\nexport type UnicodeCharProperties = number;\n\n/**\n * Width in columns of a character.\n * In a CJK context, \"half-width\" characters (such as Latin) are width 1,\n * while \"full-width\" characters (such as Kanji) are 2 columns wide.\n * Combining characters (such as accents) are width 0.\n */\nexport type UnicodeCharWidth = 0 | 1 | 2;\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): UnicodeCharWidth;\n  getStringCellWidth(s: string): number;\n  /**\n   * Return character width and type for grapheme clustering.\n   * If preceding != 0, it is the return code from the previous character;\n   * in that case the result specifies if the characters should be joined.\n   */\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): UnicodeCharWidth;\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  public static extractShouldJoin(value: UnicodeCharProperties): boolean {\n    return (value & 1) !== 0;\n  }\n  public static extractWidth(value: UnicodeCharProperties): UnicodeCharWidth {\n    return ((value >> 1) & 0x3) as UnicodeCharWidth;\n  }\n  public static extractCharKind(value: UnicodeCharProperties): number {\n    return value >> 3;\n  }\n  public static createPropertyValue(state: number, width: number, shouldJoin: boolean = false): UnicodeCharProperties {\n    return ((state & 0xffffff) << 3) | ((width & 3) << 1) | (shouldJoin?1:0);\n  }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): UnicodeCharWidth {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    let precedingInfo = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      const currentInfo = this.charProperties(code, precedingInfo);\n      let chWidth = UnicodeService.extractWidth(currentInfo);\n      if (UnicodeService.extractShouldJoin(currentInfo)) {\n        chWidth -= UnicodeService.extractWidth(precedingInfo);\n      }\n      result += chWidth;\n      precedingInfo = currentInfo;\n    }\n    return result;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    return this._activeProvider.charProperties(codepoint, preceding);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from 'xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","a","i","self","AccessibilityManager","Disposable","constructor","_terminal","instantiationService","super","_coreBrowserService","_renderService","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityContainer","mainDocument","createElement","classList","add","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_liveRegion","_liveRegionDebouncer","register","TimeBasedDebouncer","_renderRows","bind","element","Error","insertAdjacentElement","onResize","_handleResize","onRender","_refreshRows","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","onDprChange","toDisposable","remove","MAX_ROWS_TO_READ","shift","textContent","Strings","tooMuchOutput","keyChar","test","push","refresh","buffer","setSize","lines","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","position","boundaryElement","target","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","removeEventListener","newElement","unshift","scrollLines","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","dimensions","css","cell","height","style","width","canvas","IInstantiationService","ICoreBrowserService","IRenderService","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","optionsService","decPrivateModes","rawOptions","ignoreBracketedPasteMode","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","node","type","handler","options","disposed","dispose","Linkifier2","currentLink","_currentLink","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_wasResized","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","undefined","_clearCurrentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","addDisposableDomListener","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","existingReply","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","leave","lower","upper","current","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","result","linkHandler","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","confirm","newWindow","window","open","opener","location","href","console","warn","IOptionsService","IOscLinkService","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","Terminal","CoreTerminal","onFocus","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","onWillOpen","_onWillOpen","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_accessibilityManager","MutableDisposable","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","parentNode","_themeService","req","acc","ident","channels","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","ownerDocument","defaultView","_document","documentOverride","Document","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","CoreBrowserService","document","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","viewport","Viewport","onRequestScrollLines","amount","suppressScrollEvent","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","registerMarker","cursorYOffset","addMarker","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","isMac","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","setTimeout","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","_onRequestScrollLines","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","getBufferElements","startLine","endLine","cursorElement","currentLine","bufferElements","isWrapped","translateToString","div","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","layer","marker","display","onRenderEmitter","onDispose","delete","anchor","right","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_width","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","parentElement","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_isComposing","_textarea","_coreService","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","SELECTION_CLASS","nextTerminalId","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_widthCache","_themeStyleElement","_dimensionsStyleElement","WidthCache","setFont","fontWeight","fontWeightBold","_setDefaultSpacing","letterSpacing","overflow","styles","_terminalSelector","foreground","multiplyOpacity","cursor","cursorAccent","cursorWidth","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","c","INVERTED_DEFAULT_COLOR","opaque","spacing","defaultSpacing","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","replaceChildren","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","cursorAbsoluteY","cursorBlink","cursorStyle","cursorInactiveStyle","rowElement","createRow","_setCellUnderline","enabled","maxY","bufferline","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","widthCache","linkStart","linkEnd","elements","joinedRanges","getJoinedCharacters","charElement","getNoBgTrimmedLength","cellAmount","oldBg","oldFg","oldExt","oldLinkHover","oldSpacing","oldIsInSelection","classes","hasHover","isJoined","lastCharX","JoinedCellData","isInSelection","_isCellInSelection","isCursorCell","isLinkHover","isDecorated","forEachDecorationAtCell","d","chars","getChars","WHITESPACE_CELL_CHAR","isUnderline","isOverline","isBold","isItalic","selectionForeground","ext","isInvisible","isCursorHidden","isFocused","isDim","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","textDecoration","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","resolvedBg","isTop","backgroundColorRGB","foregroundColorRGB","_addStyle","padStart","_applyMinimumContrast","className","minimumContrastRatio","excludeFromContrastRatioDemands","getCode","cache","_getContrastCache","adjustedColor","ratio","ensureContrastRatio","halfContrastCache","contrastCache","padChar","_flat","Float32Array","_font","_fontSize","_weight","_weightBold","_measureElements","whiteSpace","fontKerning","regular","bold","italic","fontStyle","boldItalic","_holey","fill","font","weight","weightBold","cp","_measure","variant","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","geometry","Number","firstCell","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","_window","_isFocused","_cachedIsFocused","_screenDprMonitor","ScreenDprMonitor","_onDprChange","_onWindowChange","onWindowChange","w","setWindow","devicePixelRatio","hasFocus","queueMicrotask","_windowResizeListener","_outerListener","_setDprAndFireIfDiffers","_currentDevicePixelRatio","_updateDpr","_setWindowResizeListener","clearListener","parentWindow","_resolutionMediaMatchList","removeListener","matchMedia","addListener","_renderer","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderDebouncer","RenderDebouncer","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","r","g","b","toCss","toRgba","_colors","_contrastCache","ColorContrastCache","_halfContrastCache","_onChangeColors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onScrollApi","_windowsWrappingHeuristics","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsPtyOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","scrollAmount","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsPty","buildNumber","backend","windowsMode","_enableWindowsWrappingHeuristics","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","listener","arg1","arg2","queue","call","clearListeners","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","getAttrData","_curAttrData","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","DEBUG","prototype","split","clearRange","len","decode","subarray","viewportEnd","viewportStart","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","precedingJoinState","ch","currentInfo","charProperties","extractWidth","shouldJoin","extractShouldJoin","oldWidth","stringFromCodePoint","addLineToLink","oldRow","oldCol","_eraseAttrData","BufferLine","copyCellsFrom","addCodepointToCell","delta","insertCells","getNullCell","NULL_CELL_CODE","NULL_CELL_WIDTH","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","joinState","idata","itext","codePointAt","tlength","copyWithin","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","m","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","isValidColorIndex","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","f","isProtected","_disposables","unregister","_value","array","_data","third","fourth","navigator","userAgent","platform","isSafari","majorVersion","isIpad","isIphone","_getKey","insert","_search","getKeyIterator","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","_urlId","_ext","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","tabStopWidth","Marker","_removeMarker","$startIndex","fillCellData","_combined","_extendedAttrs","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","Buffer","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","_id","isDisposed","_nextId","_onDispose","disposable","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","wcwidth","num","ucs","bisearch","preceding","createPropertyValue","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","next","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","fromArray","k","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","_buffer","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","BufferNamespaceApi","_core","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","name","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","getDecorationsAtCell","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","trace","TRACE","info","INFO","ERROR","off","OFF","traceLogger","_logLevel","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","logger","log","_target","descriptor","fn","JSON","stringify","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","isCursorStyle","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","DI_TARGET","DI_DEPENDENCIES","serviceRegistry","decorator","arguments","storeServiceDependency","extractCharKind","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","precedingInfo","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","_verifyPositiveIntegers","writeln","addon","strings","Infinity"],"sourceRoot":""}